import matplotlib.pyplot as plt
import networkx as nx

def create_goal_tree(output_path="tree_goals.png"):
    G = nx.DiGraph()
    
    # Главная цель
    G.add_node("Повысить эффективность и масштабируемость онлайн-аукциона коллекционных монет", pos=(0, 4))
    
    # Подцели
    sub_goals = {
        "Перейти к микросервисной архитектуре": (0, 3),
        "Обеспечить безопасность и прозрачность транзакций": (-2, 3),
        "Улучшить пользовательский опыт": (2, 3),
        "Оптимизировать бизнес-процессы и маркетинг": (-4, 3)
    }
    for goal, pos in sub_goals.items():
        G.add_node(goal, pos=pos)
        G.add_edge("Повысить эффективность и масштабируемость онлайн-аукциона коллекционных монет", goal)
    
    # Дочерние подцели
    child_goals = {
        "Разделить систему на независимые компоненты": (0, 2),
        "Независимое развертывание и обновление": (1, 2),
        "Внедрить современную систему онлайн-платежей": (-3, 2),
        "Реализовать процедуры проверки подлинности лотов": (-2, 2),
        "Разработать удобный веб-сайт и приложение": (3, 2),
        "Внедрить личный кабинет с рекомендациями": (2, 2),
        "Реализовать систему аналитики спроса": (-5, 2),
        "Использовать SEO и контент-маркетинг": (-4, 2)
    }
    
    connections = {
        "Перейти к микросервисной архитектуре": ["Разделить систему на независимые компоненты", "Независимое развертывание и обновление"],
        "Обеспечить безопасность и прозрачность транзакций": ["Внедрить современную систему онлайн-платежей", "Реализовать процедуры проверки подлинности лотов"],
        "Улучшить пользовательский опыт": ["Разработать удобный веб-сайт и приложение", "Внедрить личный кабинет с рекомендациями"],
        "Оптимизировать бизнес-процессы и маркетинг": ["Реализовать систему аналитики спроса", "Использовать SEO и контент-маркетинг"]
    }
    
    for parent, children in connections.items():
        for child in children:
            G.add_node(child, pos=child_goals[child])
            G.add_edge(parent, child)
    
    # Рисуем дерево
    pos = nx.get_node_attributes(G, 'pos')
    plt.figure(figsize=(12, 8))
    nx.draw(G, pos, with_labels=True, node_size=3000, node_color="lightblue", edge_color="gray", font_size=10, font_weight="bold")
    
    # Сохраняем в PNG
    plt.savefig(output_path, format="png", dpi=300, bbox_inches='tight')
    plt.show()

# Запуск функции
create_goal_tree()